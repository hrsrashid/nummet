module BivarInterpolNewtonSpec where

import qualified BivarInterpolNewton
import qualified Data.Matrix         as Mx
import           Test.Hspec


suite :: SpecWith ()
suite = describe "Newton bivariate polynomial interpolation" $ do
  let compute = Mx.toLists . BivarInterpolNewton.compute . Mx.fromLists

  it "approx correctly" $
    compute
    [ [0, 1, 2,  3]
    , [2, 5, 6, 10]
    , [4, 8, 9, 11]
    , [6, 3, 4,  7]
    ] `shouldBe`
    [ [0.0,1.0,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9]
    , [2.0,5.0,4.965,4.96,4.985,5.04,5.125,5.24,5.385,5.56,5.765]
    , [2.2,5.66,5.625,5.62,5.645,5.7,5.785,5.9,6.045,6.22,6.425]
    , [2.4,6.24,6.205,6.2,6.225,6.28,6.365,6.48,6.625,6.8,7.005]
    , [2.6,6.74,6.705,6.7,6.725,6.78,6.865,6.98,7.125,7.3,7.505]
    , [2.8,7.16,7.125,7.12,7.145,7.2,7.285,7.4,7.545,7.72,7.925]
    , [3.0,7.5,7.465,7.46,7.485,7.54,7.625,7.74,7.885,8.06,8.265]
    , [3.2,7.76,7.725,7.72,7.745,7.8,7.885,8.0,8.145,8.32,8.525]
    , [3.4,7.94,7.905,7.9,7.925,7.98,8.065,8.18,8.325,8.5,8.705]
    , [3.6,8.04,8.005,8.0,8.025,8.08,8.165,8.28,8.425,8.6,8.805]
    , [3.8,8.06,8.025,8.02,8.045,8.1,8.185,8.3,8.445,8.62,8.825]
    ]

