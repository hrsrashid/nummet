module BivarInterpolNewtonSpec where

import qualified BivarInterpolNewton
import qualified Data.Matrix         as Mx
import           Test.Hspec


suite :: SpecWith ()
suite = describe "Newton bivariate polynomial interpolation" $ do
  let compute = Mx.toLists . BivarInterpolNewton.compute . Mx.fromLists

  it "approx correctly" $
    compute
    [ [0, 1, 2,  3]
    , [2, 5, 6, 10]
    , [4, 8, 9, 11]
    , [6, 3, 4,  7]
    ] `shouldBe`
    [ [0.0,1.0,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9]
    , [2.0,5.0,5.66,6.24,6.74,7.16,7.5,7.76,7.94,8.04,8.06]
    , [2.2,4.965,5.625,6.205,6.705,7.125,7.465,7.725,7.905,8.005,8.025]
    , [2.4,4.96,5.62,6.2,6.7,7.12,7.46,7.72,7.9,8.0,8.02]
    , [2.6,4.985,5.645,6.225,6.725,7.145,7.485,7.745,7.925,8.025,8.045]
    , [2.8,5.04,5.7,6.28,6.78,7.2,7.54,7.8,7.98,8.08,8.1]
    , [3.0,5.125,5.785,6.365,6.865,7.285,7.625,7.885,8.065,8.165,8.185]
    , [3.2,5.24,5.9,6.48,6.98,7.4,7.74,8.0,8.18,8.28,8.3]
    , [3.4,5.385,6.045,6.625,7.125,7.545,7.885,8.145,8.325,8.425,8.445]
    , [3.6,5.56,6.22,6.8,7.3,7.72,8.06,8.32,8.5,8.6,8.62]
    , [3.8,5.765,6.425,7.005,7.505,7.925,8.265,8.525,8.705,8.805,8.825]
    ]

