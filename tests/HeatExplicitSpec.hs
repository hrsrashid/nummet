module HeatExplicitSpec where

import qualified Data.Matrix  as M
import qualified Data.Vector  as V
import           Function
import qualified HeatExplicit
import           Library
import           Test.Hspec
import           TestLib


suite :: SpecWith ()
suite =
  describe "HeatExplicit" $ do
    let compute = toCReal3 . fmap M.toLists . HeatExplicit.compute

    it "solve ∂u/∂t = ∂²u/∂x² + tx, u(x,0) = -0.1x, u(0,t) = 0, u(1,t) = t - 0.1, 0 < t ≤ 10, 0 < x < 1" $
      compute
        ( 10
        , Function "x*x1" $ Right . (\v -> v V.! 0 * v V.! 1)
        , simpleFunc "-0.1x" (Right . negate . (0.1*))
        , simpleFunc "0" (Right . const 0)
        , Function "x1-0.1" $ Right . (\v -> v V.! 1 - 0.1)
        ) `shouldBe` Right (toCReal [[0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0],[-5.0e-2,-5.0e-2,-4.9999999999999975e-3,4.900000000000001e-2,0.10480000000000002,0.16096000000000005,0.21719200000000002,0.2734384000000001,0.32968768000000004,0.385937536,0.4421875072,0.49843750144,0.554687500288,0.6109375000576001,0.6671875000115199,0.723437500002304,0.7796875000004607,0.8359375000000921,0.8921875000000185,0.9484375000000037,1.0046875000000008,1.0609375,1.1171875,1.1734375000000001,1.2296875,1.2859375000000002,1.3421875,1.3984375,1.4546875000000001,1.5109375,1.5671875000000002,1.6234375,1.6796875,1.7359375000000001,1.7921875,1.8484375000000002,1.9046875,1.9609375,2.0171875,2.0734375000000003,2.1296875,2.1859375,2.2421875000000004,2.2984375000000004,2.3546875000000003,2.4109375,2.4671875,2.5234375000000004,2.5796875000000004,2.6359375000000007,2.6921875000000006,2.7484375,2.8046875000000004,2.8609375000000004,2.9171875000000007,2.9734375000000006,3.0296875,3.0859375000000004,3.1421875000000004,3.1984375000000007,3.2546875000000006,3.3109375,3.3671875000000004,3.4234375000000004,3.4796875000000007,3.5359375000000006,3.5921875,3.6484375000000004,3.7046875000000004,3.7609375000000007,3.8171875000000006,3.8734375,3.9296875000000004,3.9859375000000004,4.042187500000001,4.0984375,4.1546875000000005,4.210937500000001,4.2671875,4.323437500000001,4.3796875,4.4359375000000005,4.4921875,4.5484375,4.604687500000001,4.6609375,4.7171875000000005,4.7734375,4.8296875,4.885937500000001,4.9421875,4.9984375000000005,5.0546875,5.1109375,5.167187500000001,5.2234375,5.2796875000000005,5.335937500000001,5.3921875,5.448437500000001,5.5046875],[-0.1,0.0,0.1,0.20000000000000004,0.30000000000000004,0.4,0.5000000000000001,0.6000000000000001,0.7000000000000001,0.8,0.9,1.0,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2.0,2.1,2.2,2.3000000000000003,2.4,2.5,2.6,2.7,2.8000000000000003,2.9,3.0,3.1,3.2,3.3000000000000003,3.4,3.5,3.6,3.7,3.8000000000000003,3.9,4.000000000000001,4.1000000000000005,4.2,4.300000000000001,4.4,4.500000000000001,4.6000000000000005,4.700000000000001,4.800000000000001,4.9,5.000000000000001,5.1000000000000005,5.200000000000001,5.300000000000001,5.4,5.500000000000001,5.6000000000000005,5.700000000000001,5.800000000000001,5.9,6.000000000000001,6.1000000000000005,6.200000000000001,6.300000000000001,6.4,6.500000000000001,6.6000000000000005,6.700000000000001,6.800000000000001,6.9,7.000000000000001,7.1000000000000005,7.200000000000001,7.300000000000001,7.4,7.500000000000001,7.6000000000000005,7.700000000000001,7.800000000000001,7.9,8.0,8.100000000000001,8.200000000000001,8.3,8.4,8.5,8.600000000000001,8.700000000000001,8.8,8.9,9.0,9.100000000000001,9.200000000000001,9.3,9.4,9.500000000000002,9.600000000000001,9.700000000000001,9.8,9.9]])
